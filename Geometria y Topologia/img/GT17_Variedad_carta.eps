%!PS-Adobe-2.0 EPSF-2.0
%%Title: defvar.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Mon Feb 18 07:21:38 2008
%%For: fernando@demeter (F. Ch.)
%%BoundingBox: 0 0 1048 217
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 217 moveto 0 0 lineto 1048 0 lineto 1048 217 lineto closepath clip newpath
-70.6 380.0 translate
1 -1 scale

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index oldshow	% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proc char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% left45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 20 20 true [ 20 0 0 -20 0 20 ]
	{<8020004010002008001004000802000401000200
	8001004000802000401080200040100020080010
	0400080200040100020080010040008020004010>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P4 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 56
% Polyline
2 slj
30.000 slw
n 15750 4727 m 15784 4733 l 15818 4740 l 15852 4747 l 15885 4755 l 15918 4763 l
 15952 4772 l 15984 4782 l 16017 4793 l 16050 4805 l 16082 4817 l
 16113 4830 l 16144 4843 l 16174 4858 l 16203 4872 l 16232 4888 l
 16259 4904 l 16285 4920 l 16310 4936 l 16333 4953 l 16355 4970 l
 16375 4987 l 16394 5005 l 16411 5022 l 16427 5039 l 16441 5057 l
 16453 5074 l 16464 5091 l 16473 5109 l 16481 5126 l 16488 5144 l
 16493 5161 l 16496 5179 l 16498 5197 l 16499 5216 l 16498 5235 l
 16496 5254 l 16492 5273 l 16487 5293 l 16480 5313 l 16471 5333 l
 16461 5353 l 16449 5373 l 16435 5393 l 16420 5413 l 16404 5432 l
 16385 5451 l 16366 5470 l 16345 5489 l 16323 5506 l 16299 5524 l
 16275 5540 l 16249 5556 l 16223 5570 l 16195 5584 l 16167 5598 l
 16138 5610 l 16108 5622 l 16077 5632 l 16045 5642 l 16013 5652 l
 15983 5659 l 15952 5666 l 15920 5672 l 15888 5678 l 15854 5684 l
 15819 5688 l 15783 5693 l 15745 5697 l 15707 5700 l 15668 5703 l
 15628 5705 l 15587 5706 l 15546 5707 l 15503 5708 l 15461 5708 l
 15418 5707 l 15375 5706 l 15332 5704 l 15289 5701 l 15247 5698 l
 15204 5695 l 15163 5691 l 15122 5687 l 15082 5682 l 15043 5676 l
 15005 5671 l 14967 5665 l 14931 5658 l 14896 5651 l 14862 5644 l
 14830 5636 l 14798 5629 l 14767 5620 l 14738 5612 l 14703 5601 l
 14669 5589 l 14636 5577 l 14604 5564 l 14573 5551 l 14542 5536 l
 14513 5522 l 14484 5506 l 14457 5490 l 14430 5474 l 14405 5457 l
 14381 5439 l 14358 5422 l 14336 5404 l 14316 5386 l 14297 5368 l
 14280 5349 l 14264 5332 l 14250 5314 l 14237 5297 l 14226 5280 l
 14217 5263 l 14209 5247 l 14202 5231 l 14196 5216 l 14192 5201 l
 14189 5187 l 14188 5173 l 14187 5154 l 14188 5136 l 14192 5117 l
 14197 5100 l 14204 5082 l 14213 5065 l 14223 5048 l 14235 5031 l
 14248 5015 l 14262 4999 l 14277 4984 l 14292 4969 l 14307 4956 l
 14322 4943 l 14337 4931 l 14351 4920 l 14365 4909 l 14377 4900 l
 14389 4890 l 14400 4882 l 14411 4873 l 14421 4864 l 14431 4855 l
 14440 4847 l 14450 4839 l 14460 4831 l 14471 4823 l 14483 4815 l
 14496 4808 l 14510 4800 l 14527 4793 l 14545 4787 l 14565 4780 l
 14587 4774 l 14611 4768 l 14638 4762 l 14667 4756 l 14700 4750 l
 14720 4747 l 14741 4743 l 14764 4740 l 14787 4737 l 14812 4733 l
 14839 4730 l 14867 4727 l 14896 4723 l 14927 4720 l 14958 4717 l
 14992 4714 l 15026 4712 l 15061 4709 l 15097 4707 l 15133 4705 l
 15171 4703 l 15209 4702 l 15247 4701 l 15285 4700 l 15323 4699 l
 15362 4699 l 15399 4700 l 15437 4700 l 15474 4702 l 15511 4703 l
 15547 4705 l 15582 4708 l 15617 4711 l 15651 4714 l 15685 4718 l
 15718 4722 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 945.80 313.27] PATmp PATsp ef gr PATusp gs col0 s gr 
% here ends figure;
% 
% here starts figure with depth 50
% Arc
30.000 slw
n 4500.0 2850.0 2250.0 143.1 36.9 arcn
gs col0 s gr

% Arc
n 4579.2 7704.2 3505.1 -116.8 -66.1 arc
gs col0 s gr

% Arc
15.000 slw
gs  clippath
13914 4784 m 14007 4686 l 13740 4432 l 13901 4678 l 13647 4530 l cp
eoclip
n 9160.9 9526.5 6781.6 -116.4 -45.1 arc
gs col0 s gr
 gr

% arrowhead
30.000 slw
n 13647 4530 m 13901 4678 l 13740 4432 l 13647 4530 l  cp gs 0.00 setgray ef gr  col0 s
% Ellipse
n 4500 4575 3300 1725 0 360 DrawEllipse gs col0 s gr

% Polyline
n 12000 6300 m 14100 4200 l 18600 4200 l 16500 6300 l
 cp gs col0 s gr 
% Polyline
7.500 slw
n 14250 6300 m
 16425 4200 l gs col0 s gr 
% Polyline
n 17475 5250 m
 13050 5250 l gs col0 s gr 
% Polyline
2 slj
30.000 slw
n 5175 3138 m 5212 3141 l 5248 3146 l 5284 3151 l 5320 3156 l 5355 3162 l
 5391 3168 l 5426 3175 l 5461 3183 l 5495 3191 l 5529 3200 l
 5562 3209 l 5595 3219 l 5626 3230 l 5657 3241 l 5686 3252 l
 5714 3264 l 5740 3276 l 5764 3288 l 5787 3301 l 5808 3314 l
 5828 3327 l 5845 3341 l 5861 3354 l 5875 3368 l 5887 3382 l
 5897 3396 l 5906 3410 l 5913 3425 l 5918 3440 l 5922 3455 l
 5924 3471 l 5924 3487 l 5923 3504 l 5920 3521 l 5915 3538 l
 5908 3556 l 5899 3575 l 5889 3593 l 5877 3612 l 5862 3631 l
 5846 3649 l 5829 3668 l 5809 3687 l 5788 3705 l 5765 3723 l
 5741 3740 l 5716 3757 l 5689 3773 l 5661 3788 l 5632 3803 l
 5602 3817 l 5571 3830 l 5539 3842 l 5506 3854 l 5472 3865 l
 5438 3875 l 5408 3883 l 5377 3890 l 5345 3897 l 5313 3904 l
 5279 3910 l 5244 3916 l 5208 3921 l 5170 3926 l 5132 3930 l
 5093 3934 l 5053 3938 l 5012 3941 l 4971 3944 l 4928 3946 l
 4886 3947 l 4843 3948 l 4800 3949 l 4757 3949 l 4714 3949 l
 4672 3948 l 4629 3946 l 4588 3944 l 4547 3942 l 4507 3939 l
 4468 3936 l 4430 3932 l 4392 3928 l 4356 3923 l 4321 3918 l
 4287 3913 l 4255 3907 l 4223 3901 l 4192 3894 l 4163 3888 l
 4128 3879 l 4094 3869 l 4061 3859 l 4029 3848 l 3998 3836 l
 3967 3824 l 3938 3811 l 3909 3798 l 3882 3784 l 3855 3769 l
 3830 3754 l 3806 3738 l 3783 3722 l 3761 3706 l 3741 3689 l
 3722 3672 l 3705 3656 l 3689 3639 l 3675 3623 l 3662 3606 l
 3651 3590 l 3642 3574 l 3634 3559 l 3627 3544 l 3621 3529 l
 3617 3515 l 3614 3501 l 3613 3488 l 3612 3469 l 3613 3450 l
 3617 3432 l 3622 3414 l 3629 3397 l 3638 3379 l 3648 3362 l
 3660 3345 l 3673 3328 l 3687 3312 l 3702 3297 l 3717 3282 l
 3732 3269 l 3747 3256 l 3762 3244 l 3776 3234 l 3790 3224 l
 3802 3215 l 3814 3207 l 3825 3200 l 3837 3192 l 3848 3185 l
 3859 3178 l 3870 3172 l 3881 3167 l 3893 3163 l 3906 3159 l
 3921 3155 l 3937 3152 l 3956 3150 l 3977 3147 l 4001 3145 l
 4027 3143 l 4056 3141 l 4089 3140 l 4125 3138 l 4145 3136 l
 4166 3135 l 4189 3134 l 4212 3133 l 4237 3131 l 4264 3130 l
 4292 3129 l 4321 3128 l 4352 3126 l 4383 3125 l 4417 3124 l
 4451 3123 l 4486 3122 l 4522 3121 l 4558 3120 l 4596 3119 l
 4634 3119 l 4672 3119 l 4710 3118 l 4748 3119 l 4787 3119 l
 4824 3119 l 4862 3120 l 4899 3121 l 4936 3122 l 4972 3123 l
 5007 3125 l 5042 3127 l 5076 3129 l 5110 3132 l 5143 3134 l

 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 240.80 207.87] PATmp PATsp ef gr PATusp gs col0 s gr 
/Times-Italic ff 480.00 scf sf
7350 6075 m
gs 1 -1 sc (M) col0 sh gr
/Symbol ff 480.00 scf sf
9225 3375 m
gs 1 -1 sc (f) col0 sh gr
/Times-Italic ff 480.00 scf sf
11400 6000 m
gs 1 -1 sc (n=2) col0 sh gr
/ZapfChancery-MediumItalic ff 525.00 scf sf
5850 4050 m
gs 1 -1 sc (U) col0 sh gr
% here ends figure;
$F2psEnd
rs
end
showpage
